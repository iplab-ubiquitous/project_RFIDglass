2020-01-17  21:12:54   
Made RF model
Traindata: data_0117_p01.csv, number of data: 500
Made model: testRF_0117_p01.pkl
Save :confusion_matrix_cv_RF_0117_p01.csv
正答率 = 0.99

2020-01-17  21:33:11   
program: datapredict.py
Use model: testRF_0117_p01.pkl
TestData: testData_0117_p00.csv
Save: confusion_matrix_data_RF_0117_p01.csv
Save: confusion_matrix_data_RF_0117_p01.png
正答率： 0.28


2020-01-20  21:04:24   
Made RF model
Traindata: data_0120_p00.csv, number of data: 500
Made model: testRF_0120_p00.pkl
Save :confusion_matrix_cv_RF_0120_p00.csv
正答率 = 1.0



2020-01-20  21:09:27   
program: datapredict.py
Use model: testRF_0120_p00.pkl
TestData: testData_0117_p00.csv
Save: confusion_matrix_data_RF_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.png
正答率： 0.2


2020-01-20  21:29:33   
program: datapredict.py
Use model: testRF_0120_p00.pkl
TestData: testData_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.png
正答率： 0.34


2020-01-20  21:58:44   
Made RF model
Traindata: data_0120_p01.csv, number of data: 1000
Made model: testRF_0120_p01.pkl
Save :confusion_matrix_cv_RF_0120_p01.csv
正答率 = 0.97



2020-01-20  22:53:47   
program: datapredict.py
Use model: testRF_0120_p01.pkl
TestData: testData_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.png
正答率： 0.64


2020-01-20  23:23:21   
program: datapredict.py
Use model: testRF_0120_p01.pkl
TestData: testData_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.png
正答率： 0.52


2020-01-20  23:23:37   
program: datapredict.py
Use model: testRF_0120_p00.pkl
TestData: testData_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.png
正答率： 0.3


2020-01-20  23:23:49   
program: datapredict.py
Use model: testRF_0120_p00.pkl
TestData: testData_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p00.png
正答率： 0.34


2020-01-20  23:24:01   
program: datapredict.py
Use model: testRF_0120_p01.pkl
TestData: testData_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.png
正答率： 0.52


2020-01-20  23:44:17   
Made RF model
Traindata: data_0120_p02.csv, number of data: 1500
Made model: testRF_0120_p02.pkl
Save :confusion_matrix_cv_RF_0120_p02.csv
正答率 = 0.9933333333333333



2020-01-20  23:47:38   
program: datapredict.py
Use model: testRF_0120_p02.pkl
TestData: testData_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p02.csv
Save: confusion_matrix_data_RF_0120_p02.png
正答率： 0.38


2020-01-20  23:48:13   
program: datapredict.py
Use model: testRF_0120_p02.pkl
TestData: testData_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p02.csv
Save: confusion_matrix_data_RF_0120_p02.png
正答率： 0.58


2020-01-22  14:01:37   
Made RF model
Traindata: data_0120_p01.csv, number of data: 1000
RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=5, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=70, n_jobs=1,
            oob_score=False, random_state=3, verbose=0, warm_start=False)
Made model: testRF_0120_p01.pkl
Save :confusion_matrix_cv_RF_0120_p01.csv
Save: confusion_matrix_cv_RF_0120_p01.png
正答率 = 0.985



2020-01-22  14:04:48   
program: datapredict.py
Use model: testRF_0120_p01.pkl
TestData: testData_0120_p00.csv
Save: confusion_matrix_data_RF_0120_p01.csv
Save: confusion_matrix_data_RF_0120_p01.png
正答率： 0.64


2020-02-14  17:44:26   
Made RF model
Traindata: data_0214_p02_distance.csv, number of data: 1400


2020-02-14  17:45:14   
Made RF model
Traindata: data_0214_p02_distance.csv, number of data: 1400
RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=5, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=12,
            min_weight_fraction_leaf=0.0, n_estimators=70, n_jobs=1,
            oob_score=False, random_state=3, verbose=0, warm_start=False)
Made model: testRF_0214_p02_distance.pkl
Save :confusion_matrix_cv_RF_0214_p02_distance.csv
Save: confusion_matrix_cv_RF_0214_p02_distance.png
正答率 = 0.7428571428571429



2020-02-14  17:48:10   
program: datapredict.py
Use model: testRF_0214_p02_distance.pkl
TestData: testData_0214_p01_distance.csv
Save: confusion_matrix_data_RF_0214_p02_distance.csv
Save: confusion_matrix_data_RF_0214_p02_distance.png
正答率： 0.44285714285714284


